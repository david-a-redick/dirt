diff --git a/common/libobjs.mif b/common/libobjs.mif
index a8f9dc6d..6cb71f50 100644
--- a/common/libobjs.mif
+++ b/common/libobjs.mif
@@ -1,7 +1,7 @@
 # Common elements for most of the DOS, OS/2 and Windows
 # makefiles (not Watcom)
 
-PDCURSES_CURSES_H	= $(PDCURSES_SRCDIR)/curses.h
+PDCURSES_CURSES_H	= $(PDCURSES_SRCDIR)/pdcurses.h
 PDCURSES_CURSPRIV_H	= $(PDCURSES_SRCDIR)/curspriv.h
 PDCURSES_HEADERS	= $(PDCURSES_CURSES_H) $(PDCURSES_CURSPRIV_H)
 PANEL_HEADER		= $(PDCURSES_SRCDIR)/panel.h
diff --git a/common/pdcurses.rc b/common/pdcurses.rc
index 53d4754d..0eb5e562 100644
--- a/common/pdcurses.rc
+++ b/common/pdcurses.rc
@@ -1,5 +1,5 @@
 #include <windows.h>
-#include "../curses.h"
+#include "../pdcurses.h"
 
 VS_VERSION_INFO    VERSIONINFO
 FILEVERSION        PDC_VER_MAJOR,PDC_VER_MINOR,0,0
diff --git a/curspriv.h b/curspriv.h
index 63f3d98d..b192485d 100644
--- a/curspriv.h
+++ b/curspriv.h
@@ -5,7 +5,7 @@
 #define __CURSES_INTERNALS__ 1
 
 #define CURSES_LIBRARY
-#include <curses.h>
+#include <pdcurses.h>
 
 #if defined(__TURBOC__) || defined(__EMX__) || defined(__DJGPP__) || \
     defined(PDC_99) || defined(__WATCOMC__)
diff --git a/demos/firework.c b/demos/firework.c
index d9f40f43..0e81693b 100644
--- a/demos/firework.c
+++ b/demos/firework.c
@@ -1,4 +1,4 @@
-#include <curses.h>
+#include <pdcurses.h>
 #include <stdlib.h>
 #include <time.h>
 
diff --git a/demos/ncurses_cfg.h b/demos/ncurses_cfg.h
index 4d304842..b0a40ff4 100644
--- a/demos/ncurses_cfg.h
+++ b/demos/ncurses_cfg.h
@@ -23,7 +23,7 @@
 #define HAVE_UNISTD_H 1
 #define HAVE_TERMATTRS 1
 
-#include <curses.h>
+#include <pdcurses.h>
 
 #define ExitProgram exit
 
diff --git a/demos/ozdemo.c b/demos/ozdemo.c
index 217fe4fe..e5d5976f 100644
--- a/demos/ozdemo.c
+++ b/demos/ozdemo.c
@@ -5,7 +5,7 @@
 
 #include <signal.h>
 #include <string.h>
-#include <curses.h>
+#include <pdcurses.h>
 #include <stdlib.h>
 #include <time.h>
 
diff --git a/demos/ptest.c b/demos/ptest.c
index 3f02f3a9..d74f12d4 100644
--- a/demos/ptest.c
+++ b/demos/ptest.c
@@ -1,4 +1,4 @@
-#include <curses.h>
+#include <pdcurses.h>
 #include <panel.h>
 #include <stdlib.h>
 
diff --git a/demos/rain.c b/demos/rain.c
index 3a25050b..4014d5bd 100644
--- a/demos/rain.c
+++ b/demos/rain.c
@@ -26,7 +26,7 @@
  * authorization.                                                           *
  ****************************************************************************/
 
-#include <curses.h>
+#include <pdcurses.h>
 #include <stdlib.h>
 #include <time.h>
 
diff --git a/demos/testcurs.c b/demos/testcurs.c
index d41feb04..4bdf2654 100644
--- a/demos/testcurs.c
+++ b/demos/testcurs.c
@@ -13,7 +13,7 @@
 #include <stdio.h>
 #include <ctype.h>
 #include <string.h>
-#include <curses.h>
+#include <pdcurses.h>
 
 #ifdef WACS_S1
 # define HAVE_WIDE 1
diff --git a/demos/tui.c b/demos/tui.c
index 899739e2..1a62768f 100644
--- a/demos/tui.c
+++ b/demos/tui.c
@@ -7,7 +7,7 @@
  */
 
 #include <ctype.h>
-#include <curses.h>
+#include <pdcurses.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
diff --git a/demos/tui.h b/demos/tui.h
index 0bb4c68e..894b4e61 100644
--- a/demos/tui.h
+++ b/demos/tui.h
@@ -8,7 +8,7 @@
 #ifndef _TUI_H_
 #define _TUI_H_
 
-#include <curses.h>
+#include <pdcurses.h>
 
 #ifdef A_COLOR
 #define A_ATTR  (A_ATTRIBUTES ^ A_COLOR)  /* A_BLINK, A_REVERSE, A_BOLD */
diff --git a/demos/worm.c b/demos/worm.c
index 3eca3459..de561eb0 100644
--- a/demos/worm.c
+++ b/demos/worm.c
@@ -52,7 +52,7 @@ Options:
         -t                      make worms leave droppings
 */
 
-#include <curses.h>
+#include <pdcurses.h>
 #include <stdlib.h>
 #include <time.h>
 
diff --git a/demos/xmas.c b/demos/xmas.c
index e1c02c03..bee09ef1 100644
--- a/demos/xmas.c
+++ b/demos/xmas.c
@@ -44,7 +44,7 @@
 /*                                                                            */
 /******************************************************************************/
 
-#include <curses.h>
+#include <pdcurses.h>
 
 void lil(WINDOW *);
 void midtop(WINDOW *);
diff --git a/docs/HISTORY.md b/docs/HISTORY.md
index 9678cb19..f5f79212 100644
--- a/docs/HISTORY.md
+++ b/docs/HISTORY.md
@@ -142,7 +142,7 @@ Bug fixes and such
   because it didn't take the offsets into account for a non-owned
   window.
 
-- The version number is now hardwired only in curses.h and configure.ac.
+- The version number is now hardwired only in pdcurses.h and configure.ac.
 
 - Revised pdcurses.rc to correctly show all fields when checking the
   properties on a DLL; use it with MinGW as well as MSVC.
@@ -182,7 +182,7 @@ New features
 ------------
 
 - Avoid conflict with ncurses by having apps define PDC_NCMOUSE before
-  including curses.h to invoke the ncurses-style mouse interface,
+  including pdcurses.h to invoke the ncurses-style mouse interface,
   instead of NCURSES_MOUSE_VERSION. (The old way will also still work.)
   After Simon Sobisch (see PR #33).
 
@@ -214,7 +214,7 @@ New features
 
 - PDcurses' "bool" type is now based on stdbool.h, when available. There
   should be no conflicts when including stdbool.h either before or after
-  curses.h.
+  pdcurses.h.
 
 - The demos are no longer built by default, since they add a lot of time
   to the build, and often aren't wanted. But you can still build them via
@@ -275,7 +275,7 @@ Bug fixes and such
 
 - Finally removed deprec.c, as it promised.
 
-- Dropped the XOPEN, SYSVcurses and BSDcurses defines from curses.h, as
+- Dropped the XOPEN, SYSVcurses and BSDcurses defines from pdcurses.h, as
   well as NULL (which is defined in stdio.h, included). TRUE, FALSE, ERR
   and OK are now defined unconditionally.
 
@@ -312,7 +312,7 @@ New features
   test in testcurs.
 
 - All of the A_* and WA_* attributes from X/Open are now defined in
-  curses.h, although some are no-ops, pending the availablity of more
+  pdcurses.h, although some are no-ops, pending the availablity of more
   attribute bits. A_INVIS is now a no-op on all platforms, instead of
   overloading A_ITALIC, and so is A_PROTECT. A_LEFT and A_RIGHT are now
   synonyms for PDCurses' old *LINE attributes.
@@ -514,7 +514,7 @@ Bug fixes and such
   (slower but safer in case of a crash). Patch by Ellie Timoney.
 
 - Since 3.2, the panel library was simply a copy of the main library.
-  This kludge is now dropped. (panel.h remains separate from curses.h.)
+  This kludge is now dropped. (panel.h remains separate from pdcurses.h.)
 
 - Removed PDCurses.spec, and the RPM-building makefile option. I think
   this is better left to the various package/distro maintainers.
@@ -601,7 +601,7 @@ Bug fixes and such:
 
 - In the gcc makefiles, "$?" didn't really have the desired effect --
   _all_ the dependencies showed up on the command line, including
-  curses.h, and pdcurses.a twice.  And apparently, this can mess up some
+  pdcurses.h, and pdcurses.a twice.  And apparently, this can mess up some
   old version (?) of MinGW. So, revert to spelling out "tuidemo.o
   tui.o". Reported by "Howard L."
 
@@ -713,7 +713,7 @@ New features:
   however, panel.lib/.a is still provided (as a copy of pdcurses.lib/.a)
   so that you can, optionally, build your projects with no changes. It
   also means that panel functionality is available with the DLL or
-  shared library. Note that panel.h remains separate from curses.h.
+  shared library. Note that panel.h remains separate from pdcurses.h.
 
 - Setting the PDCURSES_SRCDIR environment variable is no longer required
   before building, unless you want to build in a location other than the
@@ -729,7 +729,7 @@ New features:
 Bug fixes and such:
 
 - Eliminated the platform defines (DOS, WIN32, OS2, XCURSES) from
-  curses.h, except for X11-specific SCREEN elements and functions.
+  pdcurses.h, except for X11-specific SCREEN elements and functions.
   Dynamically-linked X11 apps built against an old version will have
   their red and blue swapped until rebuilt. (You can define PDC_RGB to
   build the library with the old color scheme, but it would also have to
@@ -752,7 +752,7 @@ Bug fixes and such:
 
 - The Win32 compilers that build DLLs now use common .def files.
 
-- panel.h functions sorted by name, as with other .h files; curses.h is
+- panel.h functions sorted by name, as with other .h files; pdcurses.h is
   no longer included by repeated inclusions of panel.h or term.h.
 
 - Simplified Borland makefiles.
@@ -940,7 +940,7 @@ Bug fixes and such:
   tradition -- although it was PCcurses 1.x that first omitted them.
 
 - Clean separation of platform-specific code from the rest. Outside of
-  the platform directories, there remain only a few ifdefs in curses.h
+  the platform directories, there remain only a few ifdefs in pdcurses.h
   and curspriv.h.
 
 - General reorganization and simplification.
@@ -1190,7 +1190,7 @@ New features:
 - Declarations for all supported, standard functions, per the X/Open
   Curses 4.2 spec, with the notable exception of getch() and ungetch().
   You can disable the use of the macro versions by defining NOMACROS
-  before including curses.h (see xmas.c for an example). NOMACROS yields
+  before including pdcurses.h (see xmas.c for an example). NOMACROS yields
   smaller but theoretically slower executables.
 
 - New functions: vwprintw(), vwscanw(), vw_printw() and vw_scanw(). This
@@ -1224,7 +1224,7 @@ New features:
   renamed. (But the renamed xcurses.h and xpanel.h are also installed,
   for backwards compatibility.) curspriv.h and term.h are now available,
   and existing curses-based code need no longer be edited to use
-  XCurses' curses.h. And with no more need for explicit XCursesExit()
+  XCurses' pdcurses.h. And with no more need for explicit XCursesExit()
   calls (see below), your code need not be changed at all to move from
   another curses implementation to XCurses. It can be as simple as "gcc
   -I/usr/local/include/xcurses -lXCurses -oprogname progname.c".
@@ -1428,7 +1428,7 @@ BUGS FIXED:
   XCurses (using Xinitscr() instead of the obsolete XCursesProgramName).
 
 - The 16-bit chtype is a working option again (by removing #define
-  CHTYPE_LONG from curses.h), except in XCurses. It's not recommended;
+  CHTYPE_LONG from pdcurses.h), except in XCurses. It's not recommended;
   but if your needs are limited, it still works.
 
 - Reset screen size in resetty() under DOS, as in Win32 and OS/2.
@@ -1498,7 +1498,7 @@ BUGS FIXED:
 
 - pechochar() should now work correctly.
 
-- redrawwin() macro in curses.h was incorrect - fixed by Alberto Ornaghi
+- redrawwin() macro in pdcurses.h was incorrect - fixed by Alberto Ornaghi
 
 - Don't include "special" characters like KEY_SHIFT_L to be returned in
   getnstr() family. Bug 542913
@@ -1793,7 +1793,7 @@ BUGS FIXED:
 
 - mvwin() checked the wrong coordinates
 
-- removed DESQview shadow memory buffer checking bug in curses.h in
+- removed DESQview shadow memory buffer checking bug in pdcurses.h in
   \#define for wstandout()
 
 - lots of others I can't remember
@@ -2148,7 +2148,7 @@ standard.
 
   !!!IMPORTANT CHANGE!!!
 
-  The definitions for OK and ERR in curses.h were exchanged. This was
+  The definitions for OK and ERR in pdcurses.h were exchanged. This was
 done to be more consistent with UNIX versions. Also, it permits
 functions like newwin() and subwin() to return 0 (=NULL) when they fail
 due to memory shortage. This incompatibility with UNIX curses was
@@ -2221,7 +2221,7 @@ specifying numlines or numcols (or both) as 0 made the resulting actual
 size 1 line/column too small.
 
   There were a few spelling errors in function names, both in the
-function declarations and in curses.h. This was reported by Carlos
+function declarations and in pdcurses.h. This was reported by Carlos
 Amaral at INESC in Portugal. Thanks! There was also an unnecessary (but
 harmless) parameter in a function call at one place.
 
diff --git a/docs/IMPLEMNT.md b/docs/IMPLEMNT.md
index d5d54ac5..4c90e1a7 100644
--- a/docs/IMPLEMNT.md
+++ b/docs/IMPLEMNT.md
@@ -21,8 +21,8 @@ If you want to submit your port for possible inclusion into the main
 PDCurses distribution, please follow these guidelines:
 
  - Don't modify anything in the pdcurses directory or in other port
-   directories. Don't modify curses.h or curspriv.h unless absolutely
-   necessary. (And prefer modifying curspriv.h over curses.h.)
+   directories. Don't modify pdcurses.h or curspriv.h unless absolutely
+   necessary. (And prefer modifying curspriv.h over pdcurses.h.)
 
  - Use the same indentation style, naming and scope conventions as the
    existing code.
@@ -36,7 +36,7 @@ Data Structures
 
 A port of PDCurses must provide acs_map[], a 128-element array of
 chtypes, with values laid out based on the Alternate Character Set of
-the VT100 (see curses.h). PDC_transform_line() must use this table; when
+the VT100 (see pdcurses.h). PDC_transform_line() must use this table; when
 it encounters a chtype with the A_ALTCHARSET flag set, and an A_CHARTEXT
 value in the range 0-127, it must render it using the A_CHARTEXT portion
 of the corresponding value from this table, instead of the original
@@ -45,7 +45,7 @@ through functions such as waddch(), which does no special processing on
 control characters (0-31 and 127) when the A_ALTCHARSET flag is set.
 Thus, any control characters used in acs_map[] should also have the
 A_ALTCHARSET flag set. Implementations should provide suitable values
-for all the ACS_ macros defined in curses.h; other values in the table
+for all the ACS_ macros defined in pdcurses.h; other values in the table
 should be filled with their own indices (e.g., acs_map['E'] == 'E'). The
 table can be either hardwired, or filled by PDC_scr_open(). Existing
 ports define it in pdcdisp.c, but this is not required.
@@ -136,7 +136,7 @@ function is called from wgetch(). This function may be blocking, and
 traditionally is; but it need not be. If a valid key or mouse event
 cannot be returned, for any reason, this function returns -1. Valid keys
 are those that fall within the appropriate character set, or are in the
-list of special keys found in curses.h (KEY_MIN through KEY_MAX). When
+list of special keys found in pdcurses.h (KEY_MIN through KEY_MAX). When
 returning a special key code, this routine must also set SP->key_code to
 TRUE; otherwise it must set it to FALSE. If SP->return_key_modifiers is
 TRUE, this function may return modifier keys (shift, control, alt),
diff --git a/docs/MANUAL.md b/docs/MANUAL.md
index 9a8b6c5a..619a150f 100644
--- a/docs/MANUAL.md
+++ b/docs/MANUAL.md
@@ -1,4 +1,4 @@
-Definitions and Variables (curses.h)
+Definitions and Variables (pdcurses.h)
 ====================================
 
 Define before inclusion (only those needed):
@@ -331,7 +331,7 @@ attr
    These functions manipulate the current attributes and/or colors of
    the named window. These attributes can be any combination of
    A_STANDOUT, A_REVERSE, A_BOLD, A_DIM, A_BLINK, A_UNDERLINE. These
-   constants are defined in <curses.h> and can be combined with the
+   constants are defined in <pdcurses.h> and can be combined with the
    bitwise-OR operator (|).
 
    The current attributes of a window are applied to all chtypes that
@@ -897,7 +897,7 @@ getch
 
    If keypad() is TRUE, and a function key is pressed, the token for
    that function key will be returned instead of the raw characters.
-   Possible function keys are defined in <curses.h> with integers
+   Possible function keys are defined in <pdcurses.h> with integers
    beginning with 0401, whose names begin with KEY_.
 
    If nodelay(win, TRUE) has been called on the window and no input is
@@ -1042,7 +1042,7 @@ getyx
 
 ### Description
 
-   The getyx() macro (defined in curses.h -- the prototypes here are
+   The getyx() macro (defined in pdcurses.h -- the prototypes here are
    merely illustrative) puts the current cursor position of the
    specified window into y and x. getbegyx() and getmaxyx() return the
    starting coordinates and size of the specified window, respectively.
@@ -1257,7 +1257,7 @@ initscr
    curses_version() returns a string describing the version of PDCurses.
 
    PDC_get_version() fills a PDC_VERSION structure provided by the user
-   with more detailed version info (see curses.h).
+   with more detailed version info (see pdcurses.h).
 
    set_tabsize() sets the tab interval, stored in TABSIZE.
 
@@ -1752,7 +1752,7 @@ mouse
    mouse_set(), mouse_on() and mouse_off() are analagous to attrset(),
    attron() and attroff(). These functions set the mouse button events
    to trap. The button masks used in these functions are defined in
-   curses.h and can be or'ed together. They are the group of masks
+   pdcurses.h and can be or'ed together. They are the group of masks
    starting with BUTTON1_RELEASED.
 
    request_mouse_pos() requests curses to fill in the Mouse_status
@@ -1812,7 +1812,7 @@ mouse
    nc_getmouse() returns the current mouse status in an MEVENT struct.
    This is equivalent to ncurses' getmouse(), renamed to avoid conflict
    with PDCurses' getmouse(). But if you define PDC_NCMOUSE before
-   including curses.h, it defines getmouse() to nc_getmouse(), along
+   including pdcurses.h, it defines getmouse() to nc_getmouse(), along
    with a few other redefintions needed for compatibility with ncurses
    code. nc_getmouse() calls request_mouse_pos(), which (not getmouse())
    is the classic equivalent.
diff --git a/docs/USERS.md b/docs/USERS.md
index 1778fbe7..4a461861 100644
--- a/docs/USERS.md
+++ b/docs/USERS.md
@@ -55,7 +55,7 @@ character input with or without signal processing (cbreak or raw
 modes), carriage returns mapping to newlines, screen scrolling, etc.
 
 
-Data Types and the \<curses.h\> Header
+Data Types and the \<pdcurses.h\> Header
 --------------------------------------
 
 The data types supported by curses are described in this section.
@@ -65,9 +65,9 @@ structure contents are not described.  All curses data are manipulated
 using the routines provided.
 
 
-### The \<curses.h\> Header
+### The \<pdcurses.h\> Header
 
-The \<curses.h\> header defines various constants and declares the data
+The \<pdcurses.h\> header defines various constants and declares the data
 types that are available to the application.
 
 
@@ -351,7 +351,7 @@ The virtual keypad is arranged like this:
     left   B2  right
     C1    down    C3
 
-This list is incomplete -- see curses.h for the full list, and use the
+This list is incomplete -- see pdcurses.h for the full list, and use the
 testcurs demo to see what values are actually returned. The above are
 just the keys required by X/Open. In particular, PDCurses defines many
 CTL_ and ALT_ combinations; these are not portable.
diff --git a/docs/mkman.sh b/docs/mkman.sh
index a5cb0fcd..c5866cf1 100755
--- a/docs/mkman.sh
+++ b/docs/mkman.sh
@@ -1,6 +1,6 @@
-echo Definitions and Variables \(curses.h\) > MANUAL.md
+echo Definitions and Variables \(pdcurses.h\) > MANUAL.md
 echo ==================================== >> MANUAL.md
-./manext.awk ../curses.h >> MANUAL.md
+./manext.awk ../pdcurses.h >> MANUAL.md
 echo Functions >> MANUAL.md
 echo ========= >> MANUAL.md
 ./manext.awk ../pdcurses/*.c >> MANUAL.md
diff --git a/panel.h b/panel.h
index 83d4f2c6..a5e161db 100644
--- a/panel.h
+++ b/panel.h
@@ -5,7 +5,7 @@
 #ifndef __PDCURSES_PANEL_H__
 #define __PDCURSES_PANEL_H__ 1
 
-#include <curses.h>
+#include <pdcurses.h>
 
 #ifdef __cplusplus
 extern "C"
diff --git a/curses.h b/pdcurses.h
similarity index 100%
rename from curses.h
rename to pdcurses.h
diff --git a/pdcurses/attr.c b/pdcurses/attr.c
index b5907da6..9820c187 100644
--- a/pdcurses/attr.c
+++ b/pdcurses/attr.c
@@ -54,7 +54,7 @@ attr
    These functions manipulate the current attributes and/or colors of
    the named window. These attributes can be any combination of
    A_STANDOUT, A_REVERSE, A_BOLD, A_DIM, A_BLINK, A_UNDERLINE. These
-   constants are defined in <curses.h> and can be combined with the
+   constants are defined in <pdcurses.h> and can be combined with the
    bitwise-OR operator (|).
 
    The current attributes of a window are applied to all chtypes that
diff --git a/pdcurses/getch.c b/pdcurses/getch.c
index 5b29098c..64e043b0 100644
--- a/pdcurses/getch.c
+++ b/pdcurses/getch.c
@@ -38,7 +38,7 @@ getch
 
    If keypad() is TRUE, and a function key is pressed, the token for
    that function key will be returned instead of the raw characters.
-   Possible function keys are defined in <curses.h> with integers
+   Possible function keys are defined in <pdcurses.h> with integers
    beginning with 0401, whose names begin with KEY_.
 
    If nodelay(win, TRUE) has been called on the window and no input is
diff --git a/pdcurses/getyx.c b/pdcurses/getyx.c
index 9400076e..be210f2b 100644
--- a/pdcurses/getyx.c
+++ b/pdcurses/getyx.c
@@ -28,7 +28,7 @@ getyx
 
 ### Description
 
-   The getyx() macro (defined in curses.h -- the prototypes here are
+   The getyx() macro (defined in pdcurses.h -- the prototypes here are
    merely illustrative) puts the current cursor position of the
    specified window into y and x. getbegyx() and getmaxyx() return the
    starting coordinates and size of the specified window, respectively.
diff --git a/pdcurses/initscr.c b/pdcurses/initscr.c
index 2fc135a1..ebb08976 100644
--- a/pdcurses/initscr.c
+++ b/pdcurses/initscr.c
@@ -73,7 +73,7 @@ initscr
    curses_version() returns a string describing the version of PDCurses.
 
    PDC_get_version() fills a PDC_VERSION structure provided by the user
-   with more detailed version info (see curses.h).
+   with more detailed version info (see pdcurses.h).
 
    set_tabsize() sets the tab interval, stored in TABSIZE.
 
diff --git a/pdcurses/keyname.c b/pdcurses/keyname.c
index 376c9515..dbfe849d 100644
--- a/pdcurses/keyname.c
+++ b/pdcurses/keyname.c
@@ -40,7 +40,7 @@ char *keyname(int key)
 {
     static char _keyname[14];
 
-    /* Key names must be in exactly the same order as in curses.h */
+    /* Key names must be in exactly the same order as in pdcurses.h */
 
     static char *key_names[] =
     {
diff --git a/pdcurses/mouse.c b/pdcurses/mouse.c
index 61face9b..a3d2c73b 100644
--- a/pdcurses/mouse.c
+++ b/pdcurses/mouse.c
@@ -45,7 +45,7 @@ mouse
    mouse_set(), mouse_on() and mouse_off() are analagous to attrset(),
    attron() and attroff(). These functions set the mouse button events
    to trap. The button masks used in these functions are defined in
-   curses.h and can be or'ed together. They are the group of masks
+   pdcurses.h and can be or'ed together. They are the group of masks
    starting with BUTTON1_RELEASED.
 
    request_mouse_pos() requests curses to fill in the Mouse_status
@@ -105,7 +105,7 @@ mouse
    nc_getmouse() returns the current mouse status in an MEVENT struct.
    This is equivalent to ncurses' getmouse(), renamed to avoid conflict
    with PDCurses' getmouse(). But if you define PDC_NCMOUSE before
-   including curses.h, it defines getmouse() to nc_getmouse(), along
+   including pdcurses.h, it defines getmouse() to nc_getmouse(), along
    with a few other redefintions needed for compatibility with ncurses
    code. nc_getmouse() calls request_mouse_pos(), which (not getmouse())
    is the classic equivalent.
diff --git a/sdl1/sdltest.c b/sdl1/sdltest.c
index ac8c9cb2..68936025 100644
--- a/sdl1/sdltest.c
+++ b/sdl1/sdltest.c
@@ -4,7 +4,7 @@
 */
 
 #include <SDL.h>
-#include <curses.h>
+#include <pdcurses.h>
 #include <stdlib.h>
 #include <time.h>
 
diff --git a/sdl2/sdltest.c b/sdl2/sdltest.c
index 9dc0c2c1..7a6b19fd 100644
--- a/sdl2/sdltest.c
+++ b/sdl2/sdltest.c
@@ -6,7 +6,7 @@
 #define SDL_MAIN_HANDLED
 
 #include <SDL.h>
-#include <curses.h>
+#include <pdcurses.h>
 #include <stdlib.h>
 #include <time.h>
 
diff --git a/wincon/README.md b/wincon/README.md
index 6192afb4..82f4793b 100644
--- a/wincon/README.md
+++ b/wincon/README.md
@@ -54,7 +54,7 @@ Building
 
   When you build the library as a Windows DLL, you must always define
   PDC_DLL_BUILD when linking against it. (Or, if you only want to use
-  the DLL, you could add this definition to your curses.h.)
+  the DLL, you could add this definition to your pdcurses.h.)
 
   Add the target "demos" to build the sample programs.
 
diff --git a/x11/Makefile.in b/x11/Makefile.in
index 6cda7493..697bd965 100644
--- a/x11/Makefile.in
+++ b/x11/Makefile.in
@@ -18,7 +18,7 @@ bindir		= @bindir@
 includedir	= @includedir@
 
 PDCURSES_CONFIG_H	=$(osdir)/config.h
-PDCURSES_CURSES_H	=$(PDCURSES_SRCDIR)/curses.h
+PDCURSES_CURSES_H	=$(PDCURSES_SRCDIR)/pdcurses.h
 PDCURSES_CURSPRIV_H	=$(PDCURSES_SRCDIR)/curspriv.h
 PDCURSES_HEADERS	=$(PDCURSES_CONFIG_H) $(PDCURSES_CURSES_H) \
 $(PDCURSES_CURSPRIV_H)
diff --git a/x11/README.md b/x11/README.md
index a2783594..4193929c 100644
--- a/x11/README.md
+++ b/x11/README.md
@@ -27,14 +27,14 @@ Building
   build the sample programs.
 
 - Optionally, run "make install". To avoid conflicts with any existing
-  curses installations, copies of curses.h and panel.h are installed in
+  curses installations, copies of pdcurses.h and panel.h are installed in
   (by default) /usr/local/include/xcurses.
 
 
 Usage
 -----
 
-When compiling your application, you need to include the \<curses.h\>
+When compiling your application, you need to include the \<pdcurses.h\>
 that comes with PDCurses. You also need to link your code with
 libXCurses. You may need to link with the following libraries:
 
